[global]
    ### Display ###
    monitor = 0                     # Monitor in which the notification will be displayed.
    follow = keyboard               # Display notification on focused monitor.

    ### Sizes ###
    ## Notification ##
    geometry = "400x10-4-21"        # The geometry of the message window.
    notification_height = 0         # The height of the entire notification.
    horizontal_padding = 6          # Horizontal padding.
    frame_width = 2                 # Width of the frame.
    corner_radius = 0               # Define the corner radius of the notification window

    ## Separator ##
    separator_height = 2            # Width of the separator.
    separator_color = frame         # Define a color for the separator.
    padding = 6                     # Padding between text and separator.
    shrink = yes                    # Shrink window if it's smaller than the width.

    ### Behavior ###
    indicate_hidden = yes           # Show how many messages are currently hidden.
    idle_threshold = 120            # Time until notifications stop disapearing.
    sort = no                       # Sort messages by urgency.
    transparency = 0                # The transparency of the window.
    show_age_threshold = 60         # Threshold until age starts showing in history.
    ignore_newline = no             # Ignore newlines '\n' in notifications.
    stack_duplicates = true         # Stack together notifications with the same content.
    hide_duplicate_count = false    # Show the count of notifications with the same content.
    show_indicators = no            # Display indicators for URLs (U) and actions (A).

    ### Text ###
    font = DejaVu Sans Mono 10      # Font to be used.
    line_height = 0                 # The spacing between lines.
    markup = full                   # Markup type.
    format = "%a: <b>%s</b>\n%b"    # The format of the message.
    alignment = left                # Alignment of message text.
    word_wrap = yes                 # Split notifications into multiple lines.
    ellipsize = middle              # When word_wrap is set to no, specify where to make an ellipsis in long lines.
    
    ### Icons ###
    icon_position = left            # Align icons.
    max_icon_size = 32              # Scale larger icons down to this size, set to 0 to disable.
    icon_path = /usr/share/icons/Papirus-Dark/16x16/actions/:/usr/share/icons/Papirus-Dark/16x16/apps/  # Icon path.

    ### History ###
    sticky_history = yes            # History notification type.
    history_length = 20             # Maximum amount of notifications kept in history.

    ### Misc/Advanced ###
    dmenu = /usr/bin/dmenu -p dunst # dmenu path.
    browser = /usr/bin/firefox-developer-edition -new-tab  # Browser path.
    always_run_script = true        # Always run rule-defined scripts, even if the notification is suppressed.
    title = Dunst                   # Define the title of the windows spawned by dunst.
    class = Dunst                   # Define the class of the windows spawned by dunst.
    startup_notification = false    # Print a notification on startup.
    verbosity = mesg                # Define verbosity.

    ### Legacy ###
    force_xinerama = false          # Use the Xinerama extension instead of RandR for multi-monitor support.

    ### Mouse ###
    mouse_left_click = close_current    # Close current notification
    mouse_middle_click = do_action      # Call the notifications action
    mouse_right_click = close_all       # Close all notifications


[experimental]
    per_monitor_dpi = false         # Calculate the dpi to use on a per-monitor basis.

[shortcuts]
    close = mod4+m                  # Close notification.
    history = mod4+n                # Redisplay last message(s).
    context = mod4+period     # Context menu.

[urgency_low]
    background = "#1d1f21"
    foreground = "#c5c8c6"
    frame_color = "#5e8d87"
    timeout = 10

[urgency_normal]
    background = "#1d1f21"
    foreground = "#c5c8c6"
    frame_color = "#3759d6"
    timeout = 10

[urgency_critical]
    background = "#1d1f21"
    foreground = "#c5c8c6"
    frame_color = "#d64937"
    timeout = 0

[spotify_color]
    appname = Spotify
    frame_color = "#37d645"
    format = "<b>%s</b>\n%b"

[cmus_color]
    appname = cmus
    set_stack_tag = true
    frame_color = "#37d645"
    format = "<b>%s</b>\n%b"

# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
#
# Messages can be matched by
#    appname (discouraged, see desktop_entry)
#    body
#    category
#    desktop_entry
#    icon
#    match_transient
#    msg_urgency
#    stack_tag
#    summary
#
# and you can override the
#    background
#    foreground
#    format
#    frame_color
#    fullscreen
#    new_icon
#    set_stack_tag
#    set_transient
#    timeout
#    urgency
#
# Shell-like globbing will get expanded.
#
# Instead of the appname filter, it's recommended to use the desktop_entry filter.
# GLib based applications export their desktop-entry name. In comparison to the appname,
# the desktop-entry won't get localized.
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format
# to "".
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

# Disable the transient hint so that idle_threshold cannot be bypassed from the
# client
#[transient_disable]
#    match_transient = yes
#    set_transient = no
#
# Make the handling of transient notifications more strict by making them not
# be placed in history.
#[transient_history_ignore]
#    match_transient = yes
#    history_ignore = yes

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification
#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    format = ""

#[history-ignore]
#    # This notification will not be saved in history
#    summary = "foobar"
#    history_ignore = yes

#[skip-display]
#    # This notification will not be displayed, but will be included in the history
#    summary = "foobar"
#    skip_display = yes

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
#
#[stack-volumes]
#    appname = "some_volume_notifiers"
#    set_stack_tag = "volume"
#
# vim: ft=cfg
