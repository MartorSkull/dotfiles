#!/usr/bin/dash
#  batterybar; displays battery load_state as a bar on i3blocks
#  
#  Copyright 2015 Keftaa <adnan.37h@gmail.com>
#  
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#  
#  

squares="■"

dis_colors_0="#d64937"
dis_colors_1="#d6b137"
dis_colors_2="#f9f9f9"

charging_color="#FFFF00"
full_color="#f9f9f9"
ac_color="#f9f9f9"
color="#CFD2DE"
toggle=0
while getopts 1:2:3:h:c:f:a opt; do
    case "$opt" in
        1) dis_colors_0="$OPTARG";;
        2) dis_colors_1="$OPTARG";;
        3) dis_colors_2="$OPTARG";;
        c) charging_color="$OPTARG";;
        f) full_color="$OPTARG";;
        a) ac_color="$OPTARG";;
        h) printf "Usage: batterybar [OPTION] color
        When discharging, there are 3 [1-3] levels colors.
        You can specify custom colors, for example:
        
        batterybar -1 red -2 \"#F6F6F6\" -3 green
        
        You can also specify the colors for the charging, AC and
        charged states:
        
        batterybar -c green -f white -a \"#EEEEEE\"\n";
        exit 0;
    esac
done
while true
do
    load_state=$(cat /sys/class/power_supply/BAT1/capacity)
    status=$(cat /sys/class/power_supply/BAT1/status)
    AC=$(cat /sys/class/power_supply/ACAD/online)
    last_capacity=$(cat /sys/class/power_supply/BAT1/charge_full)
    energy_now=$(cat /sys/class/power_supply/BAT1/voltage_now)
    power_now=$(cat /sys/class/power_supply/BAT1/charge_now)
    #loading
    if [ $power_now -gt 0 ];
    then
        if [ $AC -gt 0 ];
        then
            remaining_h=$(((last_capacity-energy_now)/power_now))
            remaining_m=$(((last_capacity-energy_now)*60/power_now-60*remaining_h))
        else
            remaining_h=$((energy_now/power_now))
            remaining_m=$((energy_now*60/power_now-60*remaining_h))
        fi

        if [ $remaining_h -lt 10 ];
        then
            remaining_h=0$remaining_h
        fi
        if [ $remaining_m -lt 10 ];
        then
            remaining_m=0$remaining_m
        fi
            remaining=\(${remaining_h}:${remaining_m}\)
    else
        remaining=\(undef\)
    if [ $load_state -gt 90 ]; then
        status="Full"
        fi
    fi
    sleep_duration=5
    case "$status" in
    "Charging")
        color="$charging_color"
        squares=""
    ;;
    "Full")
        color="$full_color"
        squares=""
    ;;
    "AC")
       color="$ac_color"
    ;; 
    "Discharging"|"Unknown")
        if [ $load_state -lt 10 ]; then
            sleep_duration=.$((load_state+1))       
            if [ $toggle = 1 ]; then
                toggle=0 
                color=$dis_colors_0
            else
                toggle=1
                color="#FF0027"
            fi
            if [ $load_state -lt ]; then
                 $HOME/.config/i3/i3lock-wrapper
                 s2disk
            fi
            squares=""
        elif [ $load_state -lt 20 ]; then
            color=$dis_colors_0
            squares=""
        elif [ $load_state -lt 30 ]; then
            color=$dis_colors_1
            squares=""
        elif [ $load_state -lt 40 ]; then
            color=$dis_colors_2
            squares=""
        elif [ $load_state -lt 60 ]; then
            color=$dis_colors_2
            squares=""
        elif [ $load_state -lt 70 ]; then
            color=$dis_colors_2
            squares=""
        elif [ $load_state -lt 80 ]; then
            color=$dis_colors_2
            squares=""
        else
            color=$dis_colors_2
            squares=""
        fi
    ;;
    esac

    if [ $status = "Full" ]; then
        echo "<span foreground=\"$color\">${squares} $load_state%</span>"
    else
        echo "<span foreground=\"$color\">${squares} $load_state% $remaining</span>"
    fi
    sleep $sleep_duration
done